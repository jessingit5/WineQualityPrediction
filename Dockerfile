# Stage 1: Base Image with Java
FROM openjdk:11-jre-slim as base

# Set the working directory inside the container
WORKDIR /app

# --- Configuration Arguments ---
# Argument for the name of the fat JAR file generated by Maven
# *** VERIFY this filename matches your actual fat JAR in target/ ***
ARG FAT_JAR_NAME=wine-quality-prediction-1.0-SNAPSHOT-jar-with-dependencies.jar

# Argument for the name of the saved model directory
# *** VERIFY this directory name exists next to the Dockerfile during build ***
ARG MODEL_DIR_NAME=saved_wine_model

# --- Copy Artifacts ---
# Copy the application Fat JAR from the target directory (relative to build context)
COPY target/${FAT_JAR_NAME} /app/predictor.jar

# Copy the trained model directory (relative to build context)
COPY ${MODEL_DIR_NAME} /app/${MODEL_DIR_NAME}

# --- Runtime ---
# Define the entry point to run the predictor
# Takes the input data path *inside the container* as the command ($1)
# The model path is fixed inside the container (/app/saved_wine_model - matching MODEL_DIR_NAME)
ENTRYPOINT ["java", "-jar", "/app/predictor.jar", "/app/saved_wine_model", "$1"]